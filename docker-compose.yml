version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./data:/data
    command: redis-server --appendonly yes
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  fireflow-app:
    build: .
    ports:
      - "${FLASK_PORT:-5000}:5000"
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  fireflow-worker:
    build: .
    command: sh -c "sleep 5 && uv run celery -A infrastructure.celery.celery_app worker --loglevel=INFO"
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
      fireflow-app:
        condition: service_started
    restart: unless-stopped

  fireflow-flower:
    build: .
    command: sh -c "sleep 15 && uv run celery -A infrastructure.celery.celery_app flower --port=5555 --basic_auth=${FLOWER_BASIC_AUTH}"
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      fireflow-worker:
        condition: service_started
    restart: unless-stopped
